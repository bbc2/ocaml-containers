name: Build and test

on:
  - push
  - pull_request

jobs:
  run:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml:
          - '4.08.0'
          - '4.03.0'
          - '4.11.0'

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Use OCaml ${{ matrix.ocaml }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml }}

      - name: cache opam
        id: cache-opam
        uses: actions/cache@v2
        with:
          path: ~/.opam
          key: opam-${{ matrix.os }}-${{ matrix.ocaml }}

      - run: opam update -u
        if: steps.cache-opam.outputs.cache-hit == 'true'

      - run: opam pin -n .
        if: steps.cache-opam.outputs.cache-hit != 'true'

      - run: opam depext -yt containers containers-data containers-thread

      - run: opam install -t containers containers-data containers-thread --deps-only
        if: ${{ matrix.os == 'ubuntu-latest' && steps.cache-opam.outputs.cache-hit != 'true' }}

      - run: opam install -t containers --deps-only  # no test deps
        if: ${{ matrix.os != 'ubuntu-latest' && steps.cache-opam.outputs.cache-hit != 'true' }}

      - run: opam install containers-data containers-thread --deps-only  # no test deps
        if: ${{ matrix.os != 'ubuntu-latest' && steps.cache-opam.outputs.cache-hit != 'true' }}

      - run: opam exec -- dune build

      - run: opam exec -- dune runtest
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - run: opam exec -- dune runtest -p containers # test only core on non-ubuntu platform
        if: ${{ matrix.os != 'ubuntu-latest' }}
